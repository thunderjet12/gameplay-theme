{"version":3,"sources":["webpack://gameplay-theme/./resources/scripts/editor/OutlinesPlugin.js","webpack://gameplay-theme/./resources/styles/editor/index.scss?2ece","webpack://gameplay-theme/external [\"wp\",\"apiFetch\"]","webpack://gameplay-theme/external [\"wp\",\"compose\"]","webpack://gameplay-theme/external [\"wp\",\"data\"]","webpack://gameplay-theme/external [\"wp\",\"element\"]","webpack://gameplay-theme/external [\"wp\",\"plugins\"]","webpack://gameplay-theme/webpack/bootstrap","webpack://gameplay-theme/webpack/runtime/compat get default export","webpack://gameplay-theme/webpack/runtime/define property getters","webpack://gameplay-theme/webpack/runtime/hasOwnProperty shorthand","webpack://gameplay-theme/webpack/runtime/make namespace object","webpack://gameplay-theme/./resources/scripts/editor/index.ts"],"names":["console","log","SbirdThemeBuilder","props","select","wp","data","isSavingPost","isAutoSaving","isAutosavingPost","didPostSaveRequestSucceed","currentPostId","getCurrentPostId","currentPostTitle","getCurrentPost","title","currentPostType","getCurrentPostType","currentPostAttributes","getEditorBlocks","getSettings","blueprintData","postAttributes","apiFetch","path","method","headers","wpApiSettings","nonce","blueprint","then","res","err","useEffect","registerPlugin","icon","render"],"mappings":"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","file":"editor.min.js","sourcesContent":["// import { createElement } from \"@wordpress/element\";\nconsole.log(\"theme js working\")\n\nimport apiFetch from \"@wordpress/api-fetch\";\nimport { Component, createElement, useEffect } from \"@wordpress/element\";\nimport { registerPlugin }  from \"@wordpress/plugins\";\nimport { useSelect, useDispatch } from \"@wordpress/data\";\nimport { compose } from \"@wordpress/compose\";\n\n// // let data = wp.data.select(\"core/editor\").getEditorBlocks();\n// // console.log( data )\n// // let fs = require(\"fs\");\n\n// // fs.writeFile( testt , dictstring )\n// //  new File( data , absolutePluginsDirPath +\"/blueprints/test.json\",\n// //  \t{ type: \"application/json\"},\n// //  )\n\n// // console.log( absolutePluginsDirPath );\n\n\n//interface propsTypes {\n//    name: string;\n//}\n\n\n//  class SbirdThemeBuilder extends Component {\n//      constructor(props) {\n//          super(props);\n//          this.state = {\n//             test: '',\n//          }\n//          console.log(\"test working 1\");\n//      }\n\n         \n    \n\n//      componentDidUpdate () {\n\n//         console.log(\"test working 2\");\n        \n\n    //     let select = wp.data.select( 'core/editor' );\n    //     let isSavingPost = select.isSavingPost();\n    //     let isAutoSaving = select.isAutosavingPost();\n    //     let didPostSaveRequestSucceed = select.didPostSaveRequestSucceed();\n    //     if ( isSavingPost || isAutoSaving && didPostSaveRequestSucceed ) {\n    //         console.log(\"isSavingPost && !isAutosavingPost && didPostSaveRequestSucceed\");\n    //         // unsubscribe();\n\n    //         let currentPostId = wp.data.select(\"core/editor\").getCurrentPostId();\n    //         let currentPostTitle = wp.data.select(\"core/editor\").getCurrentPost().title;\n    //         let currentPostType = wp.data.select(\"core/editor\").getCurrentPostType()\n    //         let currentPostAttributes = wp.data.select(\"core/editor\").getEditorBlocks();\n    //         // wp.data.select( 'core/block-editor' ).getSettings()\n    //         //bluePrint full\n    //         let blueprintData = {\n    //             currentPostId: currentPostId,\n    //             currentPostTitle: currentPostTitle,\n    //             currentPostType: currentPostType,\n    //             postAttributes: currentPostAttributes,\n    //         };\n\n    //         console.log( blueprintData )\n\n    //         apiFetch( { \n    //             path: '/blueprints/v2/blueprint',\n    //             method: \"POST\",\n    //             headers: { \n    //                 'Content-type': 'application/json',\n    //                 'X-WP-Nonce': wpApiSettings.nonce\n    //             },\n    //             'credentials': 'same-origin',\n    //             data: { blueprint: blueprintData }\n    //         } )       \n    //         .then( res => \n    //             console.log( res )\n    //         ).catch( err => {\n    //             console.log( err );\n    //         } )\n\n    //     }\n    //  }\n        \n     \n        // const unsubscribe = wp.data.subscribe( () => {\n           \n        // } )\n                \n        \n \n    // render() {\n    //     return \n    // }\n// }\n\n// const { settings, templateType, page, deviceType } = useSelect(\n//     ( select ) => {\n//         const {\n//             getSettings,\n//             getEditedPostType,\n//             getPage,\n//             __experimentalGetPreviewDeviceType,\n//         } = select( 'core/edit-site' );\n//         return {\n//             settings: getSettings( setIsInserterOpen ),\n//             templateType: getEditedPostType(),\n//             page: getPage(),\n//             deviceType: __experimentalGetPreviewDeviceType(),\n//         };\n//     },\n//     []\n// );\n\n\n\n\n// console.log(settings, templateType, page, deviceType);\n\n// function Effect( props: PluginSettings ) {\n\n//     const Page = useSelect(\n//         ( select ) => {\n//             return select( 'core/edit-site' ).getPage();    \n//         },\n//         []\n//     );\n//     console.log( \"test 3\" );\n//     return Page;\n// }\n\n// export default compose( Effect ) ( SbirdThemeBuilder );\n\nfunction SbirdThemeBuilder (props){\n    console.log(\"test working 1\");\n    let select = wp.data.select( 'core/editor' );\n    let isSavingPost = select.isSavingPost();\n    let isAutoSaving = select.isAutosavingPost();\n    let didPostSaveRequestSucceed = select.didPostSaveRequestSucceed();\n    if ( isSavingPost || isAutoSaving && didPostSaveRequestSucceed ) {\n        console.log(\"isSavingPost && !isAutosavingPost && didPostSaveRequestSucceed\");\n        // unsubscribe();\n\n        let currentPostId = wp.data.select(\"core/editor\").getCurrentPostId();\n        let currentPostTitle = wp.data.select(\"core/editor\").getCurrentPost().title;\n        let currentPostType = wp.data.select(\"core/editor\").getCurrentPostType()\n        let currentPostAttributes = wp.data.select(\"core/editor\").getEditorBlocks();\n         wp.data.select( 'core/block-editor' ).getSettings()\n        //bluePrint full\n        let blueprintData = {\n            currentPostId: currentPostId,\n            currentPostTitle: currentPostTitle,\n            currentPostType: currentPostType,\n            postAttributes: currentPostAttributes,\n        };\n\n        console.log( blueprintData )\n\n        apiFetch( { \n            path: '/blueprints/v2/blueprint',\n            method: \"POST\",\n            headers: { \n                'Content-type': 'application/json',\n                'X-WP-Nonce': wpApiSettings.nonce\n            },\n            'credentials': 'same-origin',\n            data: { blueprint: blueprintData }\n        } )       \n        .then( res => \n            console.log( res )\n        ).catch( err => {\n            console.log( err );\n        } )    \n    }\n\n    useEffect( () => {\n        console.log( \"effect work\" )\n    }, [ isSavingPost || isAutoSaving && didPostSaveRequestSucceed ] )\n\n    return (\n            <>\n            </> \n            );\n}\n\nregisterPlugin ( 'sbird-core-additions', {\n    icon: \"admin-appearance\",\n    render: SbirdThemeBuilder,\n} )","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// eslint-disable-next-line no-unused-vars\n// import config from '@config';\nimport '@styles/editor';\n// Uncomment the following line if needed:\n// import 'airbnb-browser-shims';\n\n// Your code goes here ...\n\nimport \"./OutlinesPlugin.js\""],"sourceRoot":""}